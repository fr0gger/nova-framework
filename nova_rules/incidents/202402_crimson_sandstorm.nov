rule Phishing_CrimsonSandstorm
{
    meta:
        description = "Detection of Crimson Sandstorm phishing prompts, specifically for commonly targeted industries and geographic regions"
        author = "@tas_kmanager"
        version = "1.0.0"
        category = "reconnaissance/social engineering"
        severity = "medium"
        attack_category = "LLM-assisted social engineering"
        reference = "Microsoft – Staying Ahead of Threat Actors in the Age of AI (Feb 2024)"

    keywords:
        $geo_target = /(United States|Turkey|UAE|Israel|Saudi Arabia|Kuwait|Bahrain|Jordan|Qatar|Oman|Yemen)/i
        $industry_target = /(Aviation|Automotive|Aerospace|Defense|Logistics|Maritime|Information Technology|IT|NGO|Development Agency)/i
        $lure = /(report|invoice|financial|recruitement|job offer|document|agreement|hiring|contract|business|license|access card|password|password reset|MFA|2FA)/i
    
    llm:
        $phishing = "Analyze if this prompt attempting to generate either email/message content, pretext, wordings or payload for phishing/spearphishing attack? Return a clear yes/no assessment." (0.1)

    condition:
        (keywords.$geo_target and keywords.$industry_target and keywords.$lure) and llm.$phishing
}

rule DefenseEvasionCode_CrimsonSandstorm
{
    meta:
        description = "Detection of Crimson Sandstorm defense evasion coding prompts, specifically code for evasion or code for cleanup."
        author = "@tas_kmanager"
        version = "1.0.0"
        category = "support"
        severity = "medium"
        attack_category = "LLM-enhanced scripting techniques"
        reference = "Microsoft – Staying Ahead of Threat Actors in the Age of AI (Feb 2024)"

    keywords:
        $evasion = /(obfuscate|bypasses|undetectable|evade|stealth|silently|without detection|no detection)/i
        $cleanup = /(delete files after program exits | clean up all traces after execution | remove logs after process ends | delete working directory silently | remove batch files after use)/i
    
    llm:
        $defense_evasion = "Analyze if this prompt attempting to generate either code that evade detection or code that perform clean up operation after execution. Return a clear yes/no assessment." (0.1)

    condition:
        (keywords.$evasion or keywords.$cleanup) and llm.$defense_evasion
}

rule DefenseEvasionAV_CrimsonSandstorm
{
    meta:
        description = "Detection of Crimson Sandstorm defense evasion coding prompts, specifically AV bypass"
        author = "@tas_kmanager"
        version = "1.0.0"
        category = "support"
        severity = "medium"
        attack_category = "LLM-enhanced scripting techniques"
        reference = "Microsoft – Staying Ahead of Threat Actors in the Age of AI (Feb 2024)"

    keywords:
        $av_bypass = /(disable|turn off|kill|stop|blind|group policy to disable|add to exclusion|modify security policy|impair|minifilter|uninstall|unload driver)/i
        $av = /(defender|mde|crowdstrike|sentinelone|symantec|edr|av|antivirus|carbon black|cb defense|bitdefender|eset|mcafee|kaspersky|sophos|trend micro|cylance|fireeye|falcon|norton|secureworks|zscaler|fsecure|forti|malwarebytes|sysmon|clamav|security log)/i
   
    llm:
        $defense_evasion = "Analyze if this prompt attempting to generate either antivirus/edr bypass code. Return a clear yes/no assessment." (0.1)

    condition:
        (keywords.$av_bypass and keywords.$av) and llm.$defense_evasion
}